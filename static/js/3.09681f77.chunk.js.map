{"version":3,"sources":["helper/customhooks.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/svg/agile.svg","components/BrandName/index.jsx","actions/users.js","assets/svg/list.svg","assets/svg/close.svg","assets/svg/plus.svg","assets/svg/trash.svg","layouts/Dashboard/Header/index.jsx","containers/Header.js","layouts/Dashboard/ProjectHeader/index.jsx","containers/ProjectHeader.js","layouts/Dashboard/ProjectBoard/BoardList/Card/DescIcon/index.jsx","components/Modal/index.js","static/index.js","config.js","layouts/Dashboard/ProjectBoard/BoardList/Card/EditCard/CommentsHistory/Comment/index.jsx","containers/Comment.js","layouts/Dashboard/ProjectBoard/BoardList/Card/EditCard/CommentsHistory/index.jsx","layouts/Dashboard/ProjectBoard/BoardList/Card/EditCard/index.jsx","actions/tasks.js","actions/comments.js","actions/status.js","containers/EditCard.js","layouts/Dashboard/ProjectBoard/BoardList/Card/index.jsx","containers/Card.js","components/AddNewButton/index.jsx","components/AddNewData/index.jsx","layouts/Dashboard/ProjectBoard/BoardList/NewCard/index.jsx","containers/NewCard.js","layouts/Dashboard/ProjectBoard/BoardList/index.jsx","containers/BoardList.js","layouts/Dashboard/ProjectBoard/NewBoard/index.jsx","containers/NewBoard.js","layouts/Dashboard/ProjectBoard/index.jsx","containers/ProjectBoard.js","layouts/Dashboard/index.jsx"],"names":["useStyleForDrag","useEffect","document","addEventListener","onDragStart","onDragOver","onDragEnd","removeEventListener","event","target","style","background","opacity","preventDefault","classList","remove","useEnterClick","callBack","onKeyPress","e","keyCode","useOnClickOutside","ref","handler","listener","current","contains","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","module","exports","BrandName","className","userAuthentication","payload","dispatch","getState","username","index","users","userList","some","password","indexOfLoggedUser","findIndex","type","ActionTypes","UPDATE_LOGIN_STATUS_BY_INDEX","UPDATE_USER_NAME","resetUsers","RESET_USERS","Header","currentUser","src","AgilifyLogo","alt","id","href","onClick","connect","state","bindActionCreators","ProjectHeader","sprintName","status","DescIcon","DescSvg","modalRoot","getElementById","ModalWrapper","children","Modal","element","createElement","appendChild","removeChild","createPortal","CONTENT_TYPE","DATE_FORMAT_TYPES","dateFormatOptions","year","month","day","hour","minute","hour12","Comment","description","createdDate","Intl","DateTimeFormat","format","Date","parse","props","comments","byId","CommentsHistory","reverse","map","data","key","EditCard","useState","shouldOpenSave","setSaveButton","shouldAddCommentOpen","setAddCommentOpen","desc","setDesc","comment","setComment","saveRef","useRef","commentRef","closeModal","Close","title","deleteTaskFromStatus","statusId","taskId","onChange","row","col","onFocus","updateDesc","placeholder","addCommentsFromTask","UPDATE_DESC","commentId","uuid","ADD_NEW_COMMENTS_TO_TASK","addNewCommentsToTask","ADD_NEW_COMMENTS","addNewComments","addNewStatus","ADD_NEW_STATUS","deleteStatus","DELETE_STATUS","console","log","DELETE_TASK_IN_STATUS","deleteTaskInStatus","DELETE_TASK","deleteTask","addNewTaskFromStatus","ADD_NEW_TASK_TO_STATUS","addNewTaskToStatus","ADD_NEW_TASK","addNewTask","swapStatus","SWAP_STATUS","swapTasks","dragStatusId","dropStatusId","SWAP_TASKS_IN_SAME_STATUS","swapTaskInSameStatus","dropTaskId","dragTaskId","ADD_TASKS_IN_DIFFERENT_STATUS","addTaskInDifferentStatus","Card","shouldShowModal","setModalShow","draggable","dragId","dataTransfer","setData","onDrop","dropId","stopPropagation","getData","clearData","tasks","AddNew","text","plusIcon","AddNewData","React","forwardRef","textInput","newData","setNewData","focus","addNewData","NewCard","shouldAddNewCard","setAddNewCard","AddNewButton","memo","name","replace","DeleteSvg","onDropContent","BoardList","NewBoard","shouldAddNewBoard","setAddNewBoard","ProjectBoard","list","allIds"],"mappings":"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","file":"static/js/3.09681f77.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nexport const useStyleForDrag = () => {\n  useEffect(() => {\n    document.addEventListener(\"dragstart\", onDragStart, false);\n    document.addEventListener(\"dragover\", onDragOver, false);\n    document.addEventListener(\"dragend\", onDragEnd, false);\n    return () => {\n      document.removeEventListener(\"dragstart\", onDragStart, false);\n      document.removeEventListener(\"dragover\", onDragOver, false);\n      document.removeEventListener(\"dragend\", onDragEnd, false);\n    };\n  });\n};\n\nconst onDragStart = (event) => {\n  event.target.style.background = \"#ffffff\";\n  event.target.style.opacity = 0.3;\n};\n\nconst onDragOver = (event) => {\n  event.preventDefault();\n};\n\nconst onDragEnd = (event) => {\n  event.target.classList.remove(\"tilt\");\n  event.target.style.background = \"#d0bfff\";\n  event.target.style.opacity = \"\";\n};\n\nexport const useEnterClick = (callBack) => {\n  useEffect(() => {\n    document.addEventListener(\"keypress\", onKeyPress, false);\n\n    return () => {\n      document.removeEventListener(\"keypress\", onKeyPress, false);\n    };\n  });\n\n  const onKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      callBack();\n    }\n  };\n};\n\nexport function useOnClickOutside(ref, handler) {\n  useEffect(() => {\n    const listener = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, handler]);\n}\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","module.exports = __webpack_public_path__ + \"static/media/agile.ba108974.svg\";","import React from \"react\";\n\nconst BRAND_NAME = \"agilify\";\n\nconst BrandName = () => {\n  return <h1 className=\"brand-text\">{BRAND_NAME}</h1>;\n};\n\nexport default BrandName;\n","import ActionTypes from \"action-types\";\n\nexport function userAuthentication(payload) {\n  return (dispatch, getState) => {\n    const { users } = getState();\n    const isAuthenticated = users.userList.some(\n      ({ username, password }) =>\n        username === payload.username && password === payload.password\n    );\n    if (isAuthenticated) {\n      const indexOfLoggedUser = users.userList.findIndex(\n        ({ username, password }) =>\n          username === payload.username && password === payload.password\n      );\n      dispatch(updateLoginStatusByIndex(indexOfLoggedUser));\n      dispatch(updateUserName(payload.username));\n    }\n  };\n}\n\nexport function updateLoginStatusByIndex(index) {\n  return {\n    type: ActionTypes.UPDATE_LOGIN_STATUS_BY_INDEX,\n    payload: index\n  };\n}\n\nexport function updateUserName(username) {\n  return {\n    type: ActionTypes.UPDATE_USER_NAME,\n    payload: username\n  };\n}\n\nexport function resetUsers() {\n  return {\n    type: ActionTypes.RESET_USERS\n  };\n}\n","module.exports = __webpack_public_path__ + \"static/media/list.9673587d.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.cad70081.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.d026f1dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.1333cc6b.svg\";","import React from \"react\";\nimport AgilifyLogo from \"assets/svg/agile.svg\";\nimport BrandName from \"components/BrandName\";\n\nconst Header = ({ currentUser, resetUsers }) => {\n  return (\n    <header>\n      <div className=\"logo\">\n        <img src={AgilifyLogo} alt=\"Agilify logo\" />\n        <BrandName />\n      </div>\n      <i className=\"fa fa-bars hamburger\"></i>\n      <nav id=\"menu\">\n        <p> {currentUser}</p>\n        <p>\n          <a href=\"#\" onClick={() => resetUsers()}>\n            sign out\n          </a>\n        </p>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import { connect } from \"react-redux\";\nimport Header from \"layouts/Dashboard/Header\";\nimport { bindActionCreators } from \"redux\";\nimport { resetUsers } from \"actions/users\";\n\nconst mapStateToProps = state => ({\n  currentUser: state.users.currentUser\n});\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      resetUsers\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from \"react\";\n\nconst ProjectHeader = ({ sprintName }) => {\n  return (\n    <div className=\"project-header\">\n      <div className=\"project-header-title\">\n        <h1>{sprintName}</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectHeader;\n","import { connect } from \"react-redux\";\nimport ProjectHeader from \"layouts/Dashboard/ProjectHeader\";\n\nconst mapStateToProps = (state) => ({\n  sprintName: state.status.sprintName,\n});\n\nexport default connect(mapStateToProps, null)(ProjectHeader);\n","import React from \"react\";\nimport DescSvg from \"assets/svg/list.svg\";\n\nconst DescIcon = () => {\n  return <img src={DescSvg} alt={\"description\"} />;\n};\n\nexport default DescIcon;\n","// Modal.js\nimport React, { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nconst modalRoot = document.getElementById(\"modal\");\n\nconst ModalWrapper = ({ children }) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal\">{children}</div>\n    </div>\n  );\n};\n\nconst Modal = ({ children }) => {\n  let element = document.createElement(\"div\");\n  useEffect(() => {\n    modalRoot.appendChild(element);\n    return () => {\n      modalRoot.removeChild(element);\n    };\n  });\n  return createPortal(<ModalWrapper>{children}</ModalWrapper>, element);\n};\n\nexport default Modal;\n","export const CONTENT_TYPE = {\n  list: \"list\",\n  card: \"card\",\n};\n\nexport const DATE_FORMAT_TYPES = {\n  numeric: \"numeric\",\n  short: \"short\",\n  twoDigit: \"2-digit\",\n};\n","import { DATE_FORMAT_TYPES } from \"static\";\n\nexport const dateFormatOptions = {\n  year: DATE_FORMAT_TYPES.numeric,\n  month: DATE_FORMAT_TYPES.short,\n  day: DATE_FORMAT_TYPES.twoDigit,\n  hour: DATE_FORMAT_TYPES.numeric,\n  minute: DATE_FORMAT_TYPES.numeric,\n  hour12: true,\n};\n","import React from \"react\";\nimport { dateFormatOptions } from \"config\";\n\nconst Comment = ({ description, createdDate }) => {\n  return (\n    <div className=\"comment-li\">\n      <p>{description}</p>\n      <p>\n        {new Intl.DateTimeFormat(\"default\", dateFormatOptions).format(\n          Date.parse(createdDate)\n        )}\n      </p>\n    </div>\n  );\n};\n\nexport default Comment;\n","import { connect } from \"react-redux\";\nimport Comment from \"layouts/Dashboard/ProjectBoard/BoardList/Card/EditCard/CommentsHistory/Comment\";\n\nconst mapStateToProps = (state, props) => {\n  return state.comments.byId[props.id];\n};\n\nexport default connect(mapStateToProps, null)(Comment);\n","import React from \"react\";\nimport Comment from \"containers/Comment\";\n\nconst CommentsHistory = ({ comments }) => {\n  return (\n    <div className=\"comments\">\n      {comments.reverse().map((data) => (\n        <Comment key={data} id={data} />\n      ))}\n    </div>\n  );\n};\n\nexport default CommentsHistory;\n","import React, { useState, useRef } from \"react\";\nimport CommentsHistory from \"./CommentsHistory\";\nimport Close from \"assets/svg/close.svg\";\n\nimport { useOnClickOutside } from \"helper/customhooks\";\n\nconst EditCard = (props) => {\n  const [shouldOpenSave, setSaveButton] = useState(false);\n  const [shouldAddCommentOpen, setAddCommentOpen] = useState(false);\n\n  const [desc, setDesc] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n\n  const saveRef = useRef(null);\n  const commentRef = useRef(null);\n\n  useOnClickOutside(saveRef, () => setSaveButton(false));\n  useOnClickOutside(commentRef, () => setAddCommentOpen(false));\n\n  return (\n    <div className=\"edit-card\">\n      <div className=\"_df _jc-fe _mx-25-50\">\n        <img\n          onClick={props.closeModal}\n          className=\"icon-md icon _h-pointer\"\n          src={Close}\n          alt=\"close\"\n        />\n      </div>\n      <div className=\"edit-card-header _df _jc-sb\">\n        <h2 className=\"_capitalize\">{props.title}</h2>\n        <button\n          className=\"button _fr\"\n          onClick={() => {\n            props.deleteTaskFromStatus({\n              statusId: props.statusId,\n              taskId: props.id,\n            });\n            props.closeModal();\n          }}\n        >\n          Delete card\n        </button>\n      </div>\n      <div className=\"edit-card-body\">\n        <div className=\"edit-card-body-desc\">\n          <h4>Description</h4>\n          <div className=\"\" ref={saveRef}>\n            <textarea\n              onChange={(e) => setDesc(e.target.value)}\n              value={desc || props.description}\n              row=\"5\"\n              col=\"10\"\n              onFocus={() => setSaveButton(!shouldOpenSave)}\n            />\n            {shouldOpenSave && (\n              <button\n                className=\"button\"\n                onClick={() =>\n                  props.updateDesc({\n                    taskId: props.id,\n                    description: desc,\n                  })\n                }\n              >\n                save\n              </button>\n            )}\n          </div>\n        </div>\n        <div className=\"edit-card-body-comments\">\n          <h4>Comments</h4>\n          <div className=\"\" ref={commentRef}>\n            <textarea\n              onChange={(e) => setComment(e.target.value)}\n              value={comment}\n              row=\"5\"\n              col=\"10\"\n              placeholder=\"write a comment...\"\n              onFocus={() => setAddCommentOpen(!shouldAddCommentOpen)}\n            />\n            {shouldAddCommentOpen && (\n              <button\n                className=\"button\"\n                onClick={() =>\n                  props.addCommentsFromTask({\n                    taskId: props.id,\n                    description: comment,\n                  })\n                }\n              >\n                Add comments\n              </button>\n            )}\n          </div>\n          <CommentsHistory comments={props.comments} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditCard;\n","import ActionTypes from \"action-types\";\nimport { v4 as uuid } from \"uuid\";\nimport { addNewComments } from \"actions/comments\";\n\nexport function addNewTask(payload) {\n  return {\n    type: ActionTypes.ADD_NEW_TASK,\n    payload,\n  };\n}\n\nexport function deleteTask(payload) {\n  return {\n    type: ActionTypes.DELETE_TASK,\n    payload,\n  };\n}\n\nexport function updateDesc(payload) {\n  return {\n    type: ActionTypes.UPDATE_DESC,\n    payload,\n  };\n}\n\nexport function addCommentsFromTask(payload) {\n  return (dispatch) => {\n    const commentId = uuid();\n    const payloadForTask = {\n      taskId: payload.taskId,\n      commentId,\n    };\n    dispatch(addNewCommentsToTask(payloadForTask));\n    const payloadForComment = {\n      id: commentId,\n      description: payload.description,\n    };\n    dispatch(addNewComments(payloadForComment));\n  };\n}\n\nexport function addNewCommentsToTask(payload) {\n  return {\n    type: ActionTypes.ADD_NEW_COMMENTS_TO_TASK,\n    payload,\n  };\n}\n","import ActionTypes from \"action-types\";\n\nexport function addNewComments(payload) {\n  return {\n    type: ActionTypes.ADD_NEW_COMMENTS,\n    payload,\n  };\n}\n","import ActionTypes from \"action-types\";\nimport { v4 as uuid } from \"uuid\";\nimport { addNewTask, deleteTask } from \"./tasks\";\n\nexport function addNewStatus(payload) {\n  return {\n    type: ActionTypes.ADD_NEW_STATUS,\n    payload,\n  };\n}\n\nexport function deleteStatus(payload) {\n  return {\n    type: ActionTypes.DELETE_STATUS,\n    payload,\n  };\n}\n\nexport function deleteTaskInStatus(payload) {\n  return {\n    type: ActionTypes.DELETE_TASK_IN_STATUS,\n    payload,\n  };\n}\n\nexport function deleteTaskFromStatus(payload) {\n  return (dispatch) => {\n    console.log(payload, \" payload \");\n    dispatch(deleteTaskInStatus(payload));\n    dispatch(deleteTask(payload.taskId));\n  };\n}\n\nexport function addNewTaskFromStatus(payload) {\n  return (dispatch) => {\n    const taskId = uuid();\n    const payloadForStatus = {\n      statusId: payload.statusId,\n      taskId,\n    };\n    dispatch(addNewTaskToStatus(payloadForStatus));\n    const payloadForTask = {\n      taskId,\n      title: payload.title,\n      description: \"\",\n      comments: [],\n    };\n    dispatch(addNewTask(payloadForTask));\n  };\n}\n\nexport function addNewTaskToStatus(payload) {\n  return {\n    type: ActionTypes.ADD_NEW_TASK_TO_STATUS,\n    payload,\n  };\n}\n\nexport function swapStatus(payload) {\n  return {\n    type: ActionTypes.SWAP_STATUS,\n    payload,\n  };\n}\n\nexport function swapTaskInSameStatus(payload) {\n  return {\n    type: ActionTypes.SWAP_TASKS_IN_SAME_STATUS,\n    payload,\n  };\n}\n\nexport function addTaskInDifferentStatus(payload) {\n  return {\n    type: ActionTypes.ADD_TASKS_IN_DIFFERENT_STATUS,\n    payload,\n  };\n}\n\nexport function swapTasks(payload) {\n  return (dispatch) => {\n    if (payload.dragStatusId === payload.dropStatusId) {\n      dispatch(\n        swapTaskInSameStatus({\n          statusId: payload.dragStatusId,\n          dropTaskId: payload.dropTaskId,\n          dragTaskId: payload.dragTaskId,\n        })\n      );\n    } else {\n      dispatch(addTaskInDifferentStatus(payload));\n    }\n  };\n}\n","import { connect } from \"react-redux\";\nimport EditCard from \"layouts/Dashboard/ProjectBoard/BoardList/Card/EditCard\";\nimport { bindActionCreators } from \"redux\";\nimport { updateDesc, addCommentsFromTask } from \"actions/tasks\";\nimport { deleteTaskFromStatus } from \"actions/status\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      updateDesc,\n      addCommentsFromTask,\n      deleteTaskFromStatus,\n    },\n    dispatch\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(EditCard);\n","import React, { useState } from \"react\";\nimport DescIcon from \"./DescIcon\";\nimport { useStyleForDrag } from \"helper/customhooks\";\nimport Modal from \"components/Modal\";\nimport EditCard from \"containers/EditCard\";\n\nconst Card = (props) => {\n  const [shouldShowModal, setModalShow] = useState(false);\n\n  useStyleForDrag();\n\n  const onDragStart = (e, dragId) => {\n    e.dataTransfer.setData(\"dragTaskId\", dragId);\n  };\n\n  const onDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const onDrop = (e, dropId) => {\n    e.stopPropagation();\n    const dragStatusId = e.dataTransfer.getData(\"dragStatusId\");\n    const dragTaskId = e.dataTransfer.getData(\"dragTaskId\");\n    e.dataTransfer.clearData();\n\n    props.swapTasks({\n      dragStatusId,\n      dropStatusId: props.statusId,\n      dragTaskId,\n      dropTaskId: dropId,\n    });\n  };\n\n  return (\n    <>\n      <div\n        className=\"project-board-card-content-list\"\n        draggable={true}\n        onDragStart={(e) => onDragStart(e, props.id)}\n        onDragOver={(e) => onDragOver(e, props.id)}\n        onDrop={(e) => onDrop(e, props.id)}\n        onClick={(e) => setModalShow(!shouldShowModal)}\n      >\n        <div>\n          <p>{props.title}</p>\n        </div>\n        <div className=\"project-board-card-content-list-footer\">\n          <div className=\"task-id\">{props.description && <DescIcon />}</div>\n        </div>\n      </div>\n      {shouldShowModal && (\n        <Modal>\n          <EditCard\n            statusId={props.statusId}\n            title={props.title}\n            id={props.id}\n            description={props.description}\n            comments={props.comments}\n            closeModal={() => setModalShow(false)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Card;\n","import { connect } from \"react-redux\";\nimport Card from \"layouts/Dashboard/ProjectBoard/BoardList/Card\";\nimport { bindActionCreators } from \"redux\";\nimport { swapTasks } from \"actions/status\";\n\nconst mapStateToProps = (state, props) => {\n  return state.tasks.byId[props.id];\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      swapTasks,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n","import React from \"react\";\nimport plusIcon from \"assets/svg/plus.svg\";\n\nconst AddNew = ({ text, callBack }) => {\n  return (\n    <div className=\"add-new\" onClick={() => callBack()}>\n      <img src={plusIcon} className=\"icon-sm\" alt=\"plus icon\" />\n      <span>Add another {text}</span>\n    </div>\n  );\n};\n\nexport default AddNew;\n","import React, { useRef, useEffect, useState } from \"react\";\n\nconst AddNewData = React.forwardRef((props, ref) => {\n  const textInput = useRef(null);\n  const [newData, setNewData] = useState(\"\");\n\n  useEffect(() => {\n    textInput.current.focus();\n  }, []);\n\n  const handleButtonClick = () => {\n    props.addNewData(newData);\n    setNewData(\"\");\n  };\n\n  return (\n    <div className=\"project-board-card-add-new\" ref={ref}>\n      <input\n        type=\"text\"\n        ref={textInput}\n        value={newData}\n        placeholder={`enter ${props.type} here...`}\n        onChange={(e) => setNewData(e.target.value)}\n      />\n      <button className=\"button\" onClick={() => handleButtonClick()}>\n        Add {props.type}\n      </button>\n    </div>\n  );\n});\n\nexport default AddNewData;\n","import React, { useState, useRef } from \"react\";\nimport AddNewButton from \"components/AddNewButton\";\nimport AddNewData from \"components/AddNewData\";\n\nimport { useOnClickOutside } from \"helper/customhooks\";\nimport { CONTENT_TYPE } from \"static\";\n\nconst NewCard = ({ addNewTaskFromStatus, statusId }) => {\n  const [shouldAddNewCard, setAddNewCard] = useState(false);\n\n  const ref = useRef();\n\n  useOnClickOutside(ref, () => setAddNewCard(false));\n  return (\n    <div className=\"\">\n      {!shouldAddNewCard ? (\n        <AddNewButton\n          text={CONTENT_TYPE.card}\n          callBack={() => setAddNewCard(true)}\n        />\n      ) : (\n        <AddNewData\n          type={CONTENT_TYPE.card}\n          ref={ref}\n          addNewData={(value) =>\n            addNewTaskFromStatus({ statusId, title: value })\n          }\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewCard;\n","import { connect } from \"react-redux\";\nimport NewCard from \"layouts/Dashboard/ProjectBoard/BoardList/NewCard\";\nimport { bindActionCreators } from \"redux\";\nimport { addNewTaskFromStatus } from \"actions/status\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      addNewTaskFromStatus,\n    },\n    dispatch\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(NewCard);\n","import React from \"react\";\nimport Card from \"containers/Card\";\nimport NewCard from \"containers/NewCard\";\nimport DeleteSvg from \"assets/svg/trash.svg\";\nimport { useStyleForDrag } from \"helper/customhooks\";\n\nconst BoardList = ({\n  name,\n  id,\n  tasks,\n  swapStatus,\n  swapTasks,\n  deleteStatus,\n}) => {\n  useStyleForDrag();\n\n  const onDragStart = (e, id) => {\n    e.stopPropagation();\n    e.dataTransfer.setData(\"dragStatusId\", id);\n  };\n\n  const onDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const onDrop = (e, id) => {\n    e.stopPropagation();\n    if (!e.dataTransfer.getData(\"dragTaskId\")) {\n      const dragStatusId = e.dataTransfer.getData(\"dragStatusId\");\n      swapStatus({\n        dragStatusId,\n        dropStatusId: id,\n      });\n    }\n  };\n\n  const onDropContent = (e, id) => {\n    e.stopPropagation();\n    const dragStatusId = e.dataTransfer.getData(\"dragStatusId\");\n    const dragTaskId = e.dataTransfer.getData(\"dragTaskId\");\n    e.dataTransfer.clearData();\n\n    swapTasks({\n      dragStatusId,\n      dropStatusId: id,\n      dragTaskId,\n    });\n  };\n\n  return (\n    <div\n      className=\"project-board-card\"\n      draggable={true}\n      onDragStart={(e) => onDragStart(e, id)}\n      onDragOver={(e) => onDragOver(e)}\n      onDrop={(e) => onDrop(e, id)}\n    >\n      <div className=\"project-board-card-header _h-pointer\">\n        <p>{name.replace(\"_\", \" \")}</p>\n        <img\n          className=\"icon-sm icon\"\n          src={DeleteSvg}\n          alt=\"delete icon\"\n          onClick={() => deleteStatus(id)}\n        />\n      </div>\n      <div\n        className=\"project-board-card-content _pb-1\"\n        onDragOver={(e) => onDragOver(e)}\n        onDrop={(e) => onDropContent(e, id)}\n      >\n        {tasks.map((data) => {\n          return <Card key={data} id={data} statusId={id} />;\n        })}\n        <NewCard statusId={id} />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(BoardList);\n","import { connect } from \"react-redux\";\nimport BoardList from \"layouts/Dashboard/ProjectBoard/BoardList\";\nimport { bindActionCreators } from \"redux\";\nimport { swapStatus, swapTasks, deleteStatus } from \"actions/status\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ swapStatus, swapTasks, deleteStatus }, dispatch);\n};\n\nexport default connect(null, mapDispatchToProps)(BoardList);\n","import React, { useState, useRef } from \"react\";\nimport AddNewButton from \"components/AddNewButton\";\nimport AddNewData from \"components/AddNewData\";\nimport { useOnClickOutside } from \"helper/customhooks\";\nimport { CONTENT_TYPE } from \"static\";\n\nconst NewBoard = ({ addNewStatus }) => {\n  const [shouldAddNewBoard, setAddNewBoard] = useState(false);\n\n  const ref = useRef();\n\n  useOnClickOutside(ref, () => setAddNewBoard(false));\n\n  return (\n    <div className=\"project-board-card\">\n      {!shouldAddNewBoard ? (\n        <AddNewButton text=\"list\" callBack={() => setAddNewBoard(true)} />\n      ) : (\n        <AddNewData\n          type={CONTENT_TYPE.list}\n          ref={ref}\n          addNewData={addNewStatus}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewBoard;\n","import { connect } from \"react-redux\";\nimport NewBoard from \"layouts/Dashboard/ProjectBoard/NewBoard\";\nimport { bindActionCreators } from \"redux\";\nimport { addNewStatus } from \"actions/status\";\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      addNewStatus,\n    },\n    dispatch\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(NewBoard);\n","import React from \"react\";\nimport BoardList from \"containers/BoardList\";\nimport NewBoard from \"containers/NewBoard\";\n\nconst ProjectBoard = ({ list }) => {\n  return (\n    <div className=\"project-board\">\n      {list.map(({ id, title, tasks }) => {\n        return (\n          <BoardList key={`Status-${id}`} id={id} name={title} tasks={tasks} />\n        );\n      })}\n      <NewBoard />\n    </div>\n  );\n};\n\nexport default ProjectBoard;\n","import { connect } from \"react-redux\";\nimport ProjectBoard from \"layouts/Dashboard/ProjectBoard\";\n\nconst mapStateToProps = (state) => ({\n  list: state.status.allIds.map((data) => state.status.byId[data]),\n});\n\nexport default connect(mapStateToProps, null)(ProjectBoard);\n","import React from \"react\";\nimport Header from \"containers/Header\";\nimport ProjectHeader from \"containers/ProjectHeader\";\nimport ProjectBoard from \"containers/ProjectBoard\";\n\nexport default () => {\n  return (\n    <>\n      <Header />\n      <div className=\"dashboard\">\n        <ProjectHeader />\n        <ProjectBoard />\n      </div>\n    </>\n  );\n};\n"],"sourceRoot":""}