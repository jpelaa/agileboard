{"version":3,"sources":["action-types/index.js","reducers/users.js","reducers/status.js","reducers/tasks.js","reducers/comments.js","reducers/index.js","store.js","components/Loader/index.jsx","routes/route.config.js","routes/index.jsx","containers/Routes.js","App.js","index.js"],"names":["UPDATE_LOGIN_STATUS_BY_INDEX","UPDATE_USER_NAME","RESET_USERS","ADD_NEW_TASK","UPDATE_DESC","DELETE_TASK","ADD_NEW_COMMENTS_TO_TASK","ADD_NEW_STATUS","DELETE_STATUS","ADD_NEW_TASK_TO_STATUS","SWAP_STATUS","SWAP_TASKS_IN_SAME_STATUS","ADD_TASKS_IN_DIFFERENT_STATUS","DELETE_TASK_IN_STATUS","ADD_NEW_COMMENTS","initialState","currentUser","userList","username","nickname","isLoggedIn","role","password","project","sprintName","allIds","byId","combineReducers","users","state","action","type","ActionTypes","payload","status","actionTypes","id","uuid","title","tasks","statusId","taskId","allIdsTemp","dropIndex","findIndex","data","dropStatusId","dragIndex","dragStatusId","statusData","dropTaskIndex","dropTaskId","dragTaskIndex","dragTaskId","dragStatusData","dropStatusData","filter","dropTaskIndexIntoDropStatus","slice","undefined","SWAP_TASKS","newTaskList","taskList","temp","MOVE_TASK","newTaskList1","changeTaskIndex","MOVE_TASK_COMPLETE","map","description","comments","commentId","createdDate","Date","persistConfig","key","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","reducer","middleware","applyMiddleware","ReduxThunk","store","createStore","composeWithDevTools","persistor","persistStore","Loader","className","name","path","component","lazy","exact","authentication","default","React","memo","isAuthenticated","fallback","basepath","routes","route","i","render","props","to","connect","length","Routes","App","loading","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.badf90d6.chunk.js","sourcesContent":["//users\nconst userActionTypes = {\n  UPDATE_LOGIN_STATUS_BY_INDEX: \"UPDATE_LOGIN_STATUS_BY_INDEX\",\n  UPDATE_USER_NAME: \"UPDATE_USER_NAME\",\n  RESET_USERS: \"RESET_USERS\",\n};\n\nconst taskActionTypes = {\n  ADD_NEW_TASK: \"ADD_NEW_TASK\",\n  UPDATE_DESC: \"UPDATE_DESC\",\n  DELETE_TASK: \"DELETE_STATUS\",\n  ADD_NEW_COMMENTS_TO_TASK: \"ADD_NEW_COMMENTS_TO_TASK\",\n};\n\nconst statusActionTypes = {\n  ADD_NEW_STATUS: \"ADD_NEW_STATUS\",\n  DELETE_STATUS: \"DELETE_STATUS\",\n  ADD_NEW_TASK_TO_STATUS: \"ADD_NEW_TASK_TO_STATUS\",\n  SWAP_STATUS: \"SWAP_STATUS\",\n  SWAP_TASKS_IN_SAME_STATUS: \"SWAP_TASKS_IN_SAME_STATUS\",\n  ADD_TASKS_IN_DIFFERENT_STATUS: \"ADD_TASKS_IN_DIFFERENT_STATUS\",\n  DELETE_TASK_IN_STATUS: \"DELETE_TASK_IN_STATUS\",\n};\n\nconst commentsActionTypes = {\n  ADD_NEW_COMMENTS: \"ADD_NEW_COMMENTS\",\n};\n\nexport default {\n  ...userActionTypes,\n  ...taskActionTypes,\n  ...statusActionTypes,\n  ...commentsActionTypes,\n};\n","import ActionTypes from \"action-types\";\n\nconst initialState = {\n  currentUser: \"\",\n  userList: [\n    {\n      username: \"karthick\",\n      nickname: \"kk\",\n      isLoggedIn: false,\n      role: 1, // refer to roles\n      password: \"123\",\n      project: 1 // refer to projects\n    },\n    {\n      username: \"prasath\",\n      nickname: \"pr\",\n      isLoggedIn: false,\n      role: 2,\n      password: \"123\",\n      project: 1\n    },\n    {\n      username: \"manoj\",\n      nickname: \"ms\",\n      isLoggedIn: false,\n      role: 2,\n      password: \"123\",\n      project: 1\n    },\n    {\n      username: \"siva\",\n      nickname: \"ss\",\n      isLoggedIn: false,\n      role: 2,\n      password: \"123\",\n      project: 1\n    }\n  ]\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.UPDATE_LOGIN_STATUS_BY_INDEX:\n      const userList = [...state.userList];\n      userList[action.payload].isLoggedIn = true;\n      return { ...state, userList: [...userList] };\n    case ActionTypes.UPDATE_USER_NAME:\n      return { ...state, currentUser: action.payload };\n    case ActionTypes.RESET_USERS:\n      return { ...initialState };\n    default:\n      return state;\n  }\n}\n","import actionTypes from \"action-types\";\nimport { v4 as uuid } from \"uuid\";\n\nconst initialState = {\n  sprintName: \"SPRINT 1\",\n  allIds: [],\n  byId: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.ADD_NEW_STATUS:\n      const id = uuid();\n      return {\n        ...state,\n        allIds: [...state.allIds, id],\n        byId: {\n          ...state.byId,\n          [id]: {\n            id,\n            title: action.payload,\n            tasks: [],\n          },\n        },\n      };\n    case actionTypes.ADD_NEW_TASK_TO_STATUS:\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [action.payload.statusId]: {\n            ...state.byId[action.payload.statusId],\n            tasks: [\n              ...state.byId[action.payload.statusId].tasks,\n              action.payload.taskId,\n            ],\n          },\n        },\n      };\n\n    case actionTypes.SWAP_STATUS:\n      const allIdsTemp = [...state.allIds];\n      const dropIndex = allIdsTemp.findIndex(\n        (data) => data === action.payload.dropStatusId\n      );\n      const dragIndex = allIdsTemp.findIndex(\n        (data) => data === action.payload.dragStatusId\n      );\n      [allIdsTemp[dropIndex], allIdsTemp[dragIndex]] = [\n        allIdsTemp[dragIndex],\n        allIdsTemp[dropIndex],\n      ];\n\n      return {\n        ...state,\n        allIds: allIdsTemp,\n      };\n\n    case actionTypes.SWAP_TASKS_IN_SAME_STATUS:\n      const statusData = { ...state.byId[action.payload.statusId] };\n      const tasks = [...statusData.tasks];\n      const dropTaskIndex = tasks.findIndex(\n        (data) => data === action.payload.dropTaskId\n      );\n      const dragTaskIndex = tasks.findIndex(\n        (data) => data === action.payload.dragTaskId\n      );\n      [tasks[dropTaskIndex], tasks[dragTaskIndex]] = [\n        tasks[dragTaskIndex],\n        tasks[dropTaskIndex],\n      ];\n      statusData.tasks = tasks;\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [action.payload.statusId]: { ...statusData },\n        },\n      };\n\n    case actionTypes.ADD_TASKS_IN_DIFFERENT_STATUS:\n      const dragStatusData = { ...state.byId[action.payload.dragStatusId] };\n      const dropStatusData = { ...state.byId[action.payload.dropStatusId] };\n\n      dragStatusData.tasks = dragStatusData.tasks.filter(\n        (data) => data !== action.payload.dragTaskId\n      );\n\n      if (action.payload.dropTaskId) {\n        const dropTaskIndexIntoDropStatus = dropStatusData.tasks.findIndex(\n          (data) => data === action.payload.dropTaskId\n        );\n\n        dropStatusData.tasks = [\n          ...dropStatusData.tasks.slice(0, dropTaskIndexIntoDropStatus),\n          action.payload.dragTaskId,\n          ...dropStatusData.tasks.slice(dropTaskIndexIntoDropStatus),\n        ];\n      } else {\n        dropStatusData.tasks = [\n          ...dropStatusData.tasks,\n          action.payload.dragTaskId,\n        ];\n      }\n\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [action.payload.dragStatusId]: { ...dragStatusData },\n          [action.payload.dropStatusId]: { ...dropStatusData },\n        },\n      };\n\n    case actionTypes.DELETE_STATUS:\n      return {\n        ...state,\n        allIds: [...state.allIds.filter((data) => data !== action.payload)],\n        byId: {\n          ...state.byId,\n          [action.payload]: undefined,\n        },\n      };\n\n    case actionTypes.DELETE_TASK_IN_STATUS:\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [action.payload.statusId]: {\n            ...state.byId[action.payload.statusId],\n            tasks: state.byId[action.payload.statusId].tasks.filter(\n              (data) => data !== action.payload.taskId\n            ),\n          },\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n","import actionTypes from \"action-types\";\n\nconst initialState = {\n  allIds: [],\n  byId: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.SWAP_TASKS:\n      const newTaskList = [...state.taskList];\n      const dropIndex = newTaskList.findIndex(\n        ({ taskId }) => taskId === action.payload.dropTaskId\n      );\n      const dragIndex = newTaskList.findIndex(\n        ({ taskId }) => taskId === action.payload.dragTaskId\n      );\n\n      const temp = { ...newTaskList[dragIndex] };\n      newTaskList[dragIndex] = { ...newTaskList[dropIndex] };\n      newTaskList[dropIndex] = temp;\n      return {\n        ...state,\n        taskList: [...newTaskList],\n      };\n    case actionTypes.MOVE_TASK:\n      const newTaskList1 = [...state.taskList];\n      const changeTaskIndex = newTaskList1.findIndex(\n        ({ taskId }) => taskId === action.payload.taskId\n      );\n      newTaskList1[changeTaskIndex].status = action.payload.statusId;\n      return {\n        ...state,\n        taskList: [...newTaskList1],\n      };\n    case actionTypes.MOVE_TASK_COMPLETE:\n      return {\n        ...state,\n        taskList: [...state.taskList.map((data) => ({ ...data, status: 5 }))],\n      };\n    case actionTypes.ADD_NEW_TASK:\n      return {\n        ...state,\n        allIds: [...state.allIds, action.payload.taskId],\n        byId: {\n          ...state.byId,\n          [action.payload.taskId]: {\n            ...action.payload,\n          },\n        },\n      };\n\n    case actionTypes.DELETE_TASK:\n      return {\n        ...state,\n        allIds: [...state.allIds.filter((data) => data !== action.payload)],\n        byId: {\n          ...state.byId,\n          [action.payload]: undefined,\n        },\n      };\n    case actionTypes.UPDATE_DESC:\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [action.payload.taskId]: {\n            ...state.byId[action.payload.taskId],\n            description: action.payload.description,\n          },\n        },\n      };\n    case actionTypes.ADD_NEW_COMMENTS_TO_TASK:\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [action.payload.taskId]: {\n            ...state.byId[action.payload.taskId],\n            comments: [\n              ...state.byId[action.payload.taskId].comments,\n              action.payload.commentId,\n            ],\n          },\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import actionTypes from \"action-types\";\n\nconst initialState = {\n  allIds: [],\n  byId: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.ADD_NEW_COMMENTS:\n      return {\n        ...state,\n        allIds: [...state.allIds, action.payload.id],\n        byId: {\n          ...state.byId,\n          [action.payload.id]: {\n            ...action.payload,\n            createdDate: new Date(),\n          },\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport users from \"./users\";\nimport status from \"./status\";\nimport tasks from \"./tasks\";\nimport comments from \"./comments\";\n\nexport default combineReducers({\n  users,\n  status,\n  tasks,\n  comments,\n});\n","import { applyMiddleware, createStore } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport reducer from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  stateReconciler: autoMergeLevel2\n};\n\nconst pReducer = persistReducer(persistConfig, reducer);\n\nconst middleware = applyMiddleware(ReduxThunk);\n\nexport const store = createStore(pReducer, composeWithDevTools(middleware));\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\n\nconst Loader = () => {\n  return <div className=\"loader\">Loading....</div>;\n};\n\nexport default Loader;\n","import { lazy } from \"react\";\n\nconst Login = lazy(() => import(\"containers/Login\"));\n\nconst Dashboard = lazy(() => import(\"layouts/Dashboard\"));\n\nconst Completed = lazy(() => import(\"layouts/Completed\"));\n\nexport default [\n  {\n    name: \"login\",\n    path: \"/login\",\n    component: Login,\n    exact: true,\n    authentication: false\n  },\n  {\n    name: \"dashboard\",\n    path: \"/home\",\n    component: Dashboard,\n    exact: false,\n    authentication: true\n  },\n  {\n    name: \"completed\",\n    path: \"/completed\",\n    component: Completed,\n    exact: false,\n    authentication: true\n  },\n  {\n    name: \"default\",\n    path: [\"/\", \"/index.html\"],\n    default: true\n  }\n];\n","import React, { Suspense } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Loader from \"components/Loader\";\nimport routes from \"./route.config\";\n\nconst authPath = \"/login\";\n\nconst Routes = ({ isAuthenticated }) => {\n  return (\n    <Suspense fallback={<Loader />}>\n      <HashRouter basepath=\"/\">\n        <Switch>\n          {routes.map((route, i) => (\n            <Route\n              key={route.key || i}\n              path={route.path}\n              exact={route.exact}\n              render={props => {\n                if (route.authentication && route.path !== authPath) {\n                  if (isAuthenticated) {\n                    return <route.component {...props} routes={route.routes} />;\n                  }\n                  if (!isAuthenticated) return <Redirect to=\"/login\" />;\n                }\n                if (!route.authentication) {\n                  if (route.path === authPath) {\n                    if (isAuthenticated) return <Redirect to=\"/home\" />;\n                    if (!isAuthenticated) return <route.component {...props} />;\n                  } else if (route.default) {\n                    if (isAuthenticated) return <Redirect to=\"/home\" />;\n                    if (!isAuthenticated) return <Redirect to=\"/login\" />;\n                  } else {\n                    return <route.component {...props} />;\n                  }\n                }\n              }}\n            />\n          ))}\n        </Switch>\n      </HashRouter>\n    </Suspense>\n  );\n};\n\nexport default React.memo(Routes);\n","import { connect } from \"react-redux\";\nimport Routes from \"routes\";\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.users.currentUser.length > 0\n});\n\nexport default connect(mapStateToProps, null)(Routes);\n","import React from \"react\";\nimport \"assets/scss/styles.scss\";\n//Redux\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport { persistor, store } from \"./store\";\n\n//Routes\nimport Routes from \"containers/Routes\";\nimport Loader from \"components/Loader\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={<Loader />} persistor={persistor}>\n        <Routes />\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}