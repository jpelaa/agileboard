{"version":3,"sources":["components/Loader/index.jsx","routes/route.config.js","layouts/NotFound/index.jsx","routes/index.jsx","App.js","index.js"],"names":["Loader","className","name","path","component","lazy","exact","authentication","default","href","authed","localStorage","hasOwnProperty","Routes","fallback","basepath","routes","map","route","i","key","render","props","to","App","ReactDOM","document","getElementById"],"mappings":"6OAMeA,EAJA,WACb,OAAO,yBAAKC,UAAU,UAAf,gBCMM,GACb,CACEC,KAAM,QACNC,KAAM,SACNC,UAVUC,gBAAK,kBAAM,gCAWrBC,OAAO,EACPC,gBAAgB,GAElB,CACEL,KAAM,YACNC,KAAM,QACNC,UAfcC,gBAAK,kBAAM,gCAgBzBC,OAAO,EACPC,gBAAgB,GAElB,CACEL,KAAM,YACNC,KAAM,aACNC,UApBcC,gBAAK,kBAAM,gCAqBzBC,OAAO,EACPC,gBAAgB,GAElB,CACEL,KAAM,UACNC,KAAM,CAAC,IAAK,eACZK,SAAS,GAEX,CACEN,KAAM,WACNC,KAAM,IACNC,UCrCW,WACb,OACE,iCACE,2CAEE,uBAAGK,KAAK,UAAR,uBDiCJF,gBAAgB,IElCdG,EAAS,kBAAMC,aAAaC,eAAe,cAyClCC,EArCA,WACb,OACE,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,IAAD,KACGC,EAAOC,KAAI,SAACC,EAAOC,GAAR,OACV,kBAAC,IAAD,CACEC,IAAKF,EAAME,KAAOD,EAClBhB,KAAMe,EAAMf,KACZG,MAAOY,EAAMZ,MACbe,OAAQ,SAAAC,GACN,GAAIJ,EAAMX,gBAbT,WAa2BW,EAAMf,KAAmB,CACnD,GAAIO,IACF,OAAO,kBAACQ,EAAMd,UAAP,iBAAqBkB,EAArB,CAA4BN,OAAQE,EAAMF,UAEnD,IAAKN,IAAU,OAAO,kBAAC,IAAD,CAAUa,GAAG,WAErC,IAAKL,EAAMX,eACT,GApBD,WAoBKW,EAAMf,KAAmB,CAC3B,GAAIO,IAAU,OAAO,kBAAC,IAAD,CAAUa,GAAG,UAClC,IAAKb,IAAU,OAAO,kBAACQ,EAAMd,UAAckB,OACtC,KAAIJ,EAAMV,QAIf,OAAO,kBAACU,EAAMd,UAAckB,GAH5B,GAAIZ,IAAU,OAAO,kBAAC,IAAD,CAAUa,GAAG,UAClC,IAAKb,IAAU,OAAO,kBAAC,IAAD,CAAUa,GAAG,sBCvBxCC,EAJH,WACV,OAAO,kBAAC,EAAD,OCHTC,IAASJ,OAAO,kBAAC,EAAD,MAASK,SAASC,eAAe,W","file":"static/js/main.a27f3459.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loader = () => {\n  return <div className=\"loader\">Loading....</div>;\n};\n\nexport default Loader;\n","import React, { lazy } from \"react\";\nimport NotFound from \"layouts/NotFound\";\n\nconst Login = lazy(() => import(\"layouts/Login\"));\n\nconst Dashboard = lazy(() => import(\"layouts/Dashboard\"));\n\nconst Completed = lazy(() => import(\"layouts/Completed\"));\n\nexport default [\n  {\n    name: \"login\",\n    path: \"/login\",\n    component: Login,\n    exact: true,\n    authentication: false\n  },\n  {\n    name: \"dashboard\",\n    path: \"/home\",\n    component: Dashboard,\n    exact: false,\n    authentication: true\n  },\n  {\n    name: \"completed\",\n    path: \"/completed\",\n    component: Completed,\n    exact: false,\n    authentication: true\n  },\n  {\n    name: \"default\",\n    path: [\"/\", \"/index.html\"],\n    default: true\n  },\n  {\n    name: \"notfound\",\n    path: \"*\",\n    component: NotFound,\n    authentication: false\n  }\n];\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <section>\n      <p>\n        404 not found\n        <a href=\"/login\">redirect to home</a>\n      </p>\n    </section>\n  );\n};\n","import React, { Suspense } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Loader from \"components/Loader\";\nimport routes from \"./route.config\";\n\nconst authed = () => localStorage.hasOwnProperty(\"userToken\");\n\nconst authPath = \"/login\";\n\nconst Routes = () => {\n  return (\n    <Suspense fallback={<Loader />}>\n      <HashRouter basepath=\"/\">\n        <Switch>\n          {routes.map((route, i) => (\n            <Route\n              key={route.key || i}\n              path={route.path}\n              exact={route.exact}\n              render={props => {\n                if (route.authentication && route.path !== authPath) {\n                  if (authed()) {\n                    return <route.component {...props} routes={route.routes} />;\n                  }\n                  if (!authed()) return <Redirect to=\"/login\" />;\n                }\n                if (!route.authentication) {\n                  if (route.path === authPath) {\n                    if (authed()) return <Redirect to=\"/home\" />;\n                    if (!authed()) return <route.component {...props} />;\n                  } else if (route.default) {\n                    if (authed()) return <Redirect to=\"/home\" />;\n                    if (!authed()) return <Redirect to=\"/login\" />;\n                  } else {\n                    return <route.component {...props} />;\n                  }\n                }\n              }}\n            />\n          ))}\n        </Switch>\n      </HashRouter>\n    </Suspense>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport \"assets/scss/styles.scss\";\n\n//Routes\nimport Routes from \"routes\";\n\nconst App = () => {\n  return <Routes />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}