{"version":3,"sources":["action-types/index.js","reducers/users.js","reducers/projects.js","reducers/roles.js","reducers/status.js","reducers/tasks.js","reducers/index.js","store.js","components/Loader/index.jsx","routes/route.config.js","routes/index.jsx","containers/Routes.js","App.js","index.js","static/index.js"],"names":["UPDATE_LOGIN_STATUS_BY_INDEX","UPDATE_USER_NAME","RESET_USERS","SWAP_TASKS","MOVE_TASK","MOVE_TASK_COMPLETE","initialState","currentUser","userList","username","nickname","isLoggedIn","role","password","project","projectId","projectName","epicList","id","name","roleId","roleName","statusId","statusName","sprintName","taskList","taskId","type","TASK_TYPE","STORY","epicId","description","assignee","storyPoint","status","TASK","combineReducers","users","state","action","ActionTypes","payload","projects","roles","tasks","actionTypes","newTaskList","dropIndex","findIndex","dropTaskId","dragIndex","dragTaskId","temp","newTaskList1","changeTaskIndex","map","data","persistConfig","key","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","reducer","middleware","applyMiddleware","ReduxThunk","store","createStore","composeWithDevTools","persistor","persistStore","Loader","className","path","component","lazy","exact","authentication","default","React","memo","isAuthenticated","fallback","basepath","routes","route","i","render","props","to","connect","length","Routes","App","loading","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ce947af5.chunk.js","sourcesContent":["//users\nconst UserActionTypes = {\n  UPDATE_LOGIN_STATUS_BY_INDEX: \"UPDATE_LOGIN_STATUS_BY_INDEX\",\n  UPDATE_USER_NAME: \"UPDATE_USER_NAME\",\n  RESET_USERS: \"RESET_USERS\"\n};\n\nconst TaskActionTypes = {\n  SWAP_TASKS: \"SWAP_TASKS\",\n  MOVE_TASK: \"MOVE_TASK\",\n  MOVE_TASK_COMPLETE: \"MOVE_TASK_COMPLETE\"\n};\n\nexport default {\n  ...UserActionTypes,\n  ...TaskActionTypes\n};\n","import ActionTypes from \"action-types\";\n\nconst initialState = {\n  currentUser: \"\",\n  userList: [\n    {\n      username: \"karthick\",\n      nickname: \"kk\",\n      isLoggedIn: false,\n      role: 1, // refer to roles\n      password: \"123\",\n      project: 1 // refer to projects\n    },\n    {\n      username: \"prasath\",\n      nickname: \"pr\",\n      isLoggedIn: false,\n      role: 2,\n      password: \"123\",\n      project: 1\n    },\n    {\n      username: \"manoj\",\n      nickname: \"ms\",\n      isLoggedIn: false,\n      role: 2,\n      password: \"123\",\n      project: 1\n    },\n    {\n      username: \"siva\",\n      nickname: \"ss\",\n      isLoggedIn: false,\n      role: 2,\n      password: \"123\",\n      project: 1\n    }\n  ]\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.UPDATE_LOGIN_STATUS_BY_INDEX:\n      const userList = [...state.userList];\n      userList[action.payload].isLoggedIn = true;\n      return { ...state, userList: [...userList] };\n    case ActionTypes.UPDATE_USER_NAME:\n      return { ...state, currentUser: action.payload };\n    case ActionTypes.RESET_USERS:\n      return { ...initialState };\n    default:\n      return state;\n  }\n}\n","const initialState = [\n  {\n    projectId: 1,\n    projectName: \"SCORE_CARD\",\n    epicList: [\n      {\n        id: 1,\n        name: \"user authentication\"\n      },\n      {\n        id: 2,\n        name: \"score card\"\n      }\n    ]\n  }\n];\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n","const initialState = [\n  {\n    roleId: 1,\n    roleName: \"SCRUM_MASTER\"\n  },\n  {\n    roleId: 2,\n    roleName: \"TEAM_MEMBER\"\n  }\n];\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n","const initialState = [\n  {\n    statusId: 1,\n    statusName: \"TO_DO\"\n  },\n  {\n    statusId: 2,\n    statusName: \"IN_PROGRESS\"\n  },\n  {\n    statusId: 3,\n    statusName: \"TESTING\"\n  },\n  {\n    statusId: 4,\n    statusName: \"DONE\"\n  },\n  {\n    statusId: 5,\n    statusName: \"COMPLETED\"\n  }\n];\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n","import { TASK_TYPE } from \"../static\";\nimport actionTypes from \"action-types\";\n\nconst initialState = {\n  sprintName: \"Sprint 10\",\n  taskList: [\n    {\n      taskId: \"SC-110\",\n      type: TASK_TYPE.STORY,\n      epicId: 1,\n      description:\n        \"clean up all the now-unnecessary code that we can eliminate with `EditableView` out of our lives\",\n      assignee: \"prasath\",\n      storyPoint: 2,\n      status: 1\n    },\n    {\n      taskId: \"SC-111\",\n      type: TASK_TYPE.TASK,\n      epicId: 1,\n      description:\n        \"(8) Clicking the collection beneath a board should filter by collection, not open collections pop-over\",\n      storyPoint: 1,\n      assignee: \"prasath\",\n      status: 2\n    },\n    {\n      taskId: \"SC-112\",\n      type: TASK_TYPE.STORY,\n      epicId: 1,\n      description:\n        \"(2) Client release provides `index` as direct file as well as _at least_`index.en-GB`\",\n      assignee: \"prasath\",\n      storyPoint: 4,\n      status: 2\n    },\n    {\n      taskId: \"SC-113\",\n\n      type: TASK_TYPE.STORY,\n      epicId: 1,\n      description:\n        \"(2) Client release provides `index` as direct file as well as _at least_`index.en-GB`\",\n      assignee: \"prasath\",\n      storyPoint: 4,\n      status: 3\n    },\n    {\n      taskId: \"SC-114\",\n\n      type: TASK_TYPE.STORY,\n      epicId: 1,\n      description:\n        \"(2) Client release provides `index` as direct file as well as _at least_`index.en-GB`\",\n      assignee: \"prasath\",\n      storyPoint: 4,\n      status: 4\n    },\n    {\n      taskId: \"SC-115\",\n\n      type: TASK_TYPE.STORY,\n      epicId: 1,\n      description:\n        \"(2) Client release provides `index` as direct file as well as _at least_`index.en-GB`\",\n      assignee: \"prasath\",\n      storyPoint: 4,\n      status: 1\n    },\n    {\n      taskId: \"SC-116\",\n\n      type: TASK_TYPE.STORY,\n      epicId: 1,\n      description:\n        \"(2) Client release provides `index` as direct file as well as _at least_`index.en-GB`\",\n      assignee: \"manoj\",\n      storyPoint: 4,\n      status: 2\n    },\n    {\n      taskId: \"SC-117\",\n\n      type: TASK_TYPE.STORY,\n      epicId: 1,\n      description:\n        \"(2) Client release provides `index` as direct file as well as _at least_`index.en-GB`\",\n      assignee: \"manoj\",\n      storyPoint: 4,\n      status: 4\n    },\n    {\n      taskId: \"SC-118\",\n      type: TASK_TYPE.STORY,\n      epicId: 1,\n      description:\n        \"(2) Client release provides `index` as direct file as well as _at least_`index.en-GB`\",\n      assignee: \"manoj\",\n      storyPoint: 4,\n      status: 4\n    }\n  ]\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.SWAP_TASKS:\n      const newTaskList = [...state.taskList];\n      const dropIndex = newTaskList.findIndex(\n        ({ taskId }) => taskId === action.payload.dropTaskId\n      );\n      const dragIndex = newTaskList.findIndex(\n        ({ taskId }) => taskId === action.payload.dragTaskId\n      );\n\n      const temp = { ...newTaskList[dragIndex] };\n      newTaskList[dragIndex] = { ...newTaskList[dropIndex] };\n      newTaskList[dropIndex] = temp;\n      return {\n        ...state,\n        taskList: [...newTaskList]\n      };\n    case actionTypes.MOVE_TASK:\n      const newTaskList1 = [...state.taskList];\n      const changeTaskIndex = newTaskList1.findIndex(\n        ({ taskId }) => taskId === action.payload.taskId\n      );\n      newTaskList1[changeTaskIndex].status = action.payload.statusId;\n      return {\n        ...state,\n        taskList: [...newTaskList1]\n      };\n      case actionTypes.MOVE_TASK_COMPLETE:\n        return {\n          ...state,\n          taskList: [...state.taskList.map(data => ({ ...data, status: 5 }))]\n        };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport users from \"./users\";\nimport projects from \"./projects\";\nimport roles from \"./roles\";\nimport status from \"./status\";\nimport tasks from \"./tasks\";\n\nexport default combineReducers({\n  users,\n  projects,\n  roles,\n  status,\n  tasks\n});\n","import { applyMiddleware, createStore } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport reducer from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  stateReconciler: autoMergeLevel2\n};\n\nconst pReducer = persistReducer(persistConfig, reducer);\n\nconst middleware = applyMiddleware(ReduxThunk);\n\nexport const store = createStore(pReducer, composeWithDevTools(middleware));\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\n\nconst Loader = () => {\n  return <div className=\"loader\">Loading....</div>;\n};\n\nexport default Loader;\n","import { lazy } from \"react\";\n\nconst Login = lazy(() => import(\"containers/Login\"));\n\nconst Dashboard = lazy(() => import(\"layouts/Dashboard\"));\n\nconst Completed = lazy(() => import(\"layouts/Completed\"));\n\nexport default [\n  {\n    name: \"login\",\n    path: \"/login\",\n    component: Login,\n    exact: true,\n    authentication: false\n  },\n  {\n    name: \"dashboard\",\n    path: \"/home\",\n    component: Dashboard,\n    exact: false,\n    authentication: true\n  },\n  {\n    name: \"completed\",\n    path: \"/completed\",\n    component: Completed,\n    exact: false,\n    authentication: true\n  },\n  {\n    name: \"default\",\n    path: [\"/\", \"/index.html\"],\n    default: true\n  }\n];\n","import React, { Suspense } from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Loader from \"components/Loader\";\nimport routes from \"./route.config\";\n\nconst authPath = \"/login\";\n\nconst Routes = ({ isAuthenticated }) => {\n  return (\n    <Suspense fallback={<Loader />}>\n      <HashRouter basepath=\"/\">\n        <Switch>\n          {routes.map((route, i) => (\n            <Route\n              key={route.key || i}\n              path={route.path}\n              exact={route.exact}\n              render={props => {\n                if (route.authentication && route.path !== authPath) {\n                  if (isAuthenticated) {\n                    return <route.component {...props} routes={route.routes} />;\n                  }\n                  if (!isAuthenticated) return <Redirect to=\"/login\" />;\n                }\n                if (!route.authentication) {\n                  if (route.path === authPath) {\n                    if (isAuthenticated) return <Redirect to=\"/home\" />;\n                    if (!isAuthenticated) return <route.component {...props} />;\n                  } else if (route.default) {\n                    if (isAuthenticated) return <Redirect to=\"/home\" />;\n                    if (!isAuthenticated) return <Redirect to=\"/login\" />;\n                  } else {\n                    return <route.component {...props} />;\n                  }\n                }\n              }}\n            />\n          ))}\n        </Switch>\n      </HashRouter>\n    </Suspense>\n  );\n};\n\nexport default React.memo(Routes);\n","import { connect } from \"react-redux\";\nimport Routes from \"routes\";\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.users.currentUser.length > 0\n});\n\nexport default connect(mapStateToProps, null)(Routes);\n","import React from \"react\";\nimport \"assets/scss/styles.scss\";\n//Redux\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport { persistor, store } from \"./store\";\n\n//Routes\nimport Routes from \"containers/Routes\";\nimport Loader from \"components/Loader\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={<Loader />} persistor={persistor}>\n        <Routes />\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","export const TASK_TYPE = {\n  STORY: \"STORY\",\n  TASK: \"TASK\"\n};\n"],"sourceRoot":""}